{
  "openapi": "3.0.1",
  "info": {
    "title": "Pharmacy Manager Platform",
    "description": "",
    "contact": {
      "email": "qaz11807@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:3000/"
    },
    {
      "url": "http://localhost:3000/"
    },
    {
      "url": "https://pharmacy-manager-platform.herokuapp.com/"
    }
  ],
  "tags": [
    {
      "name": "pharmacy",
      "description": "Operations about pharmacy"
    },
    {
      "name": "mask",
      "description": "Operations about mask"
    },
    {
      "name": "order",
      "description": "Operations about order"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/pharmacy": {
      "get": {
        "tags": ["pharmacy"],
        "operationId": "findByPrice",
        "summary": "Get pharmacies by price.",
        "parameters": [
          {
            "name": "condition",
            "in": "query",
            "required": true,
            "description": "the compare operator.",
            "schema": {
              "enum": ["ge", "gte", "lt", "lte"]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "description": "the compare threshold.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "startPrice",
            "in": "query",
            "description": "the min price want to filter.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endPrice",
            "in": "query",
            "description": "the max price want to filter.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "the filtered pharmacies.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Pharmacy": {
                        "$ref": "#/components/schemas/Pharmacy"
                      },
                      "maskCount": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pharmacy/opening": {
      "get": {
        "tags": ["pharmacy"],
        "operationId": "findOpeningPharmacies",
        "summary": "Get opening pharmacies.",
        "parameters": [
          {
            "name": "time",
            "in": "query",
            "required": true,
            "description": "the time want to query. format is 'xx:xx'.",
            "schema": {
              "type": "string",
              "pattern": "[0-9]{2}:[0-9]{2}"
            }
          },
          {
            "name": "day",
            "in": "query",
            "description": "the day want to query.",
            "schema": {
              "$ref": "#/components/schemas/Days"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "the opening pharmacies.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pharmacy"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mask": {
      "get": {
        "tags": ["mask"],
        "summary": "Get masks by pharmacy name.",
        "operationId": "findByPharmacyName",
        "parameters": [
          {
            "name": "pharmacyName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortByPrice",
            "in": "query",
            "description": "Sort order:\n  * `asc` - Ascending, from A to Z \n  * `desc` - Descending, from Z to A    \n",
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          {
            "name": "sortByName",
            "in": "query",
            "description": "Sort order: \n  * `asc` - Ascending, from A to Z \n  * `desc` - Descending, from Z to A \n",
            "schema": {
              "$ref": "#/components/schemas/Sort"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "the sorted mask og pharmacy.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Mask"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mask/relevant": {
      "get": {
        "tags": ["mask"],
        "summary": "Get relevant masks by name.",
        "operationId": "searchRelevantMask",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "the keyword of mask name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "color",
            "in": "query",
            "description": "the keyword of color.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "the relevant mask.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Mask"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/top": {
      "get": {
        "tags": ["user"],
        "summary": "Get top x transcation user.",
        "operationId": "findTopTranscationUser",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "the amount of user want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "the min date want to filter..",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "the max date want to filter..",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "the amount of price and user detailed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "User": {
                        "$ref": "#/components/schemas/User"
                      },
                      "priceAmount": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/order": {
      "post": {
        "tags": ["order"],
        "summary": "User purchase a mask.",
        "operationId": "makeOrder",
        "parameters": [
          {
            "name": "maskId",
            "in": "query",
            "description": "the id of mask that want to purchase.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "the id of user.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "the detailed of this transaction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      }
    },
    "/order/performance": {
      "get": {
        "tags": ["order"],
        "summary": "Calc sales performance during date.",
        "operationId": "calcSalesPerformanceByDate",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "the min date want to filter..",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "the max date want to filter..",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "the Amount of mask and price.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "maskAmount": {
                      "type": "number"
                    },
                    "priceAmount": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Days": {
        "type": "string",
        "enum": [
          "sun",
          "mon",
          "tue",
          "wed",
          "thu",
          "fri",
          "sat",
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "6"
        ]
      },
      "Pharmacy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "cashBalacne": {
            "type": "integer",
            "description": "the amount of money that pharmacy hold.",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "the name of pharmacy."
          }
        },
        "xml": {
          "name": "Pharmacy"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "cashBalacne": {
            "type": "integer",
            "description": "the amount of money that user hold.",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "the name of user."
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Mask": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "the name of mask."
          },
          "pack": {
            "type": "number",
            "description": "the pack amount of mask."
          },
          "color": {
            "type": "string",
            "description": "the color of mask."
          },
          "price": {
            "type": "number",
            "description": "the price of mask."
          }
        },
        "xml": {
          "name": "Mask"
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "transcationAmount": {
            "type": "number",
            "description": "the amount of transcation."
          },
          "transcationDate": {
            "type": "string",
            "format": "date-time",
            "description": "the date of transcation."
          },
          "Pharmacy": {
            "$ref": "#/components/schemas/Pharmacy"
          },
          "Mask": {
            "$ref": "#/components/schemas/Mask"
          },
          "User": {
            "$ref": "#/components/schemas/User"
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "Sort": {
        "type": "string",
        "enum": ["ASC", "DESC"]
      }
    }
  }
}
